{"version":3,"sources":["webpack:///webpack/bootstrap 5811178bcee9d50ea358","webpack:///./js/DemoCircles/DemoAppConstants.js","webpack:///./js/main.js","webpack:///./js/DemoCircles/DemoClientGame.js","webpack:///./js/DemoCircles/CircleEntity.js","webpack:///./js/DemoCircles/DemoView.js"],"names":["module","exports","Constants","ENTITY_DEFAULT_RADIUS","GAME_WIDTH","GAME_HEIGHT","MAX_CIRCLES","GAME_DURATION","UNKNOWN","GENERIC_CIRCLE","PLAYER_ENTITY","ENTITY_TYPES","onDocumentReady","clientGame","window","addEventListener","require","CircleEntity","DemoView","DemoClientGame","startGameClock","view","insertIntoHTMLElementWithId","stats","update","gameClockReal","entityDesc","diameter","radius","aCircleView","CAAT","ShapeActor","create","setSize","setFillStyle","Color","prototype","hsvToRgb","entityid","toHex","setLocation","x","y","newEntity","isOwnedByMe","clientid","netChannel","entityType","PlayerEntity","addTraitAndExecute","RealtimeMultiplayerGame","controller","traits","KeyboardInputTrait","clientCharacter","position","set","setView","fieldController","addEntity","entityDescAsArray","entityDescription","color","messageData","log","joinGame","getClientid","msg","console","AbstractClientGame","nOffset","Math","random","DemoApp","anEntityid","aClientid","superclass","constructor","call","setColor","velocity","model","Point","acceleration","ZERO","collisionCircle","updateView","lastReceivedEntityDescription","updatePosition","speedFactor","gameClock","gameTick","theta","noise","angle","speed","cos","sin","translatePoint","limit","multiply","clone","tempColor","that","clearTimeout","timeout","setTimeout","originalColor","dealloc","constructEntityDescription","setCollisionCircle","aCollisionCircle","setDelegate","setPosition","setRadius","collisionMask","collisionGroup","getCollisionCircle","aColor","getColor","getOriginalColor","extend","GameEntity","setupCAAT","setupStats","caatDirector","caatScene","Scene","Director","initialize","addScene","delta","timeline","render","container","document","createElement","Stats","domElement","style","top","appendChild","body","anEntityView","addChild","removeChild","id","getElementById","canvas","director","destroy"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5811178bcee9d50ea358","/**\n File:\n DemoAppConstants.js\n Created By:\n Mario Gonzalez\n Project:\n RealtimeMultiplayerNodeJS - Demo\n Abstract:\n This class contains Constants used by the DemoApp in RealtimeMultiplayerGame\n Basic Usage:\n [This class is not instantiated! - below is an example of using this class by extending it]\n var clientDropWait = RealtimeMultiplayerGame.Constants.CL_DEFAULT_MAXRATE\n\n Version:\n 1.0\n */\n module.exports = function(){\n     class Constants {\n         \n     }\n    Constants.ENTITY_DEFAULT_RADIUS = 8;\n    Constants.GAME_WIDTH = 700;\n    Constants.GAME_HEIGHT = 450;\n    Constants.MAX_CIRCLES = 100;\n    Constants.GAME_DURATION = 1000 * 300;\n    Constants.UNKNOWN = 1 << 0;\n    Constants.GENERIC_CIRCLE = 1 << 1;\n    Constants.PLAYER_ENTITY = 1 << 2;\n    \n    Constants.ENTITY_TYPES = {\n        \n    }\n }\n\n\n// WEBPACK FOOTER //\n// ./js/DemoCircles/DemoAppConstants.js","import DemoClientGame from './DemoCircles/DemoClientGame';\n\n(function () {\n    var onDocumentReady = function () {\n        var clientGame = new DemoClientGame();\n    };\n\n    window.addEventListener('load', onDocumentReady, false);\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./js/main.js","var Constants = require('./DemoAppConstants');\nvar CircleEntity = require('./CircleEntity');\nvar DemoView = require('./DemoView');\n\n/**\n File:\n DemoServerGame\n Created By:\n Mario Gonzalez\n Project:\n DemoApp\n Abstract:\n This is a concrete server instance of our game\n Basic Usage:\n DemoServerGame = new DemoApp.DemoServerGame();\n DemoServerGame.start();\n DemoServerGame.explodeEveryone();\n Version:\n 1.0\n */\n\nexport default class DemoClientGame extends RealtimeMultiplayerGame.AbstractClientGame {\n\n    constructor() {\n        super();\n        this.startGameClock();\n        return this;\n    };\n\n\n    setupView() {\n        this.view = new DemoView();\n        this.view.insertIntoHTMLElementWithId(\"gamecontainer\");\n\n        super.setupView(this);\n    };\n\n    /**\n     * @inheritDoc\n     */\n    tick() {\n        super.tick();\n        this.view.stats.update();\n        this.view.update(this.gameClockReal);\n    };\n\n    /**\n     * @inheritDoc\n     */\n    createEntityFromDesc(entityDesc) {\n\n        var diameter = entityDesc.radius * 2;\n\n        // Create a view via CAAT\n        var aCircleView = new CAAT.ShapeActor();\n        aCircleView.create();\n        aCircleView.setSize(diameter, diameter);\n        aCircleView.setFillStyle(\"#\" + CAAT.Color.prototype.hsvToRgb((entityDesc.entityid * 15) % 360, 40, 99).toHex()); // Random color\n        aCircleView.setLocation(entityDesc.x, entityDesc.y); // Place in the center of the screen, use the director's width/height\n\n        var newEntity = null;\n\n        var isOwnedByMe = entityDesc.clientid == this.netChannel.clientid;\n        // If this is a player entity\n        if (entityDesc.entityType & Constants.ENTITY_TYPES.PLAYER_ENTITY) {\n            newEntity = new PlayerEntity(entityDesc.entityid, entityDesc.clientid);\n\n            // If it is a player entity and it's my player entity - attach a KeyboardInputTrait to it\n            if (isOwnedByMe) {\n                newEntity.addTraitAndExecute(new RealtimeMultiplayerGame.controller.traits.KeyboardInputTrait());\n                this.clientCharacter = newEntity;\n            }\n        } else {\n            newEntity = new CircleEntity(entityDesc.entityid, entityDesc.clientid);\n        }\n\n        newEntity.position.set(entityDesc.x, entityDesc.y);\n        newEntity.setView(aCircleView);\n\n        this.fieldController.addEntity(newEntity);\n    };\n\n    /**\n     * Called by the ClientNetChannel, it sends us an array containing tightly packed values and expects us to return a meaningful object\n     * It is left up to each game to implement this function because only the game knows what it needs to send.\n     * However the 4 example projects in RealtimeMultiplayerNodeJS offer should be used ans examples\n     *\n     * @param {Array} entityDescAsArray An array of tightly packed values\n     * @return {Object} An object which will be returned to you later on tied to a specific entity\n     */\n    parseEntityDescriptionArray(entityDescAsArray) {\n        var entityDescription = {};\n\n        // It is left upto each game to implement this function because only the game knows what it needs to send.\n        // However the 4 example projects in RealtimeMultiplayerNodeJS offer this an example\n        entityDescription.entityid = entityDescAsArray[0];\n        entityDescription.clientid = entityDescAsArray[1];\n        entityDescription.entityType = +entityDescAsArray[2];\n        entityDescription.x = +entityDescAsArray[3];\n        entityDescription.y = +entityDescAsArray[4];\n        entityDescription.radius = +entityDescAsArray[5];\n        entityDescription.color = entityDescAsArray[6];\n        return entityDescription;\n    };\n\n    /**\n     * @inheritDoc\n     */\n    netChannelDidConnect(messageData) {\n        super.netChannelDidConnect(messageData);\n        this.log(\"this: Joining Game\");\n        this.joinGame(\"Player\" + this.netChannel.getClientid()); // Automatically join the game with some name\n    };\n\n    /**\n     * @inheritDoc\n     */\n    netChannelDidDisconnect(messageData) {\n        super.netChannelDidDisconnect(messageData);\n        this.log(\"netChannelDidDisconnect\");\n    };\n\n    /**\n     * This function logs something to the right panel\n     * @param {Object} An object in the form of: { message: ['Client', 'domReady'] }\n     */\n    log(msg) {\n        console.log(\"DemoClientGame: \" + msg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./js/DemoCircles/DemoClientGame.js","var Constants = require('./DemoAppConstants');\n\n/**\n File:\n DemoApp.CircleEntity\n Created By:\n Mario Gonzalez\n Project:\n DemoApp\n Abstract:\n This is the base entity for the demo game\n Basic Usage:\n\n Version:\n 1.0\n */\n(function () {\n\n    var nOffset = Math.random() * 2000;\n    DemoApp.CircleEntity = function (anEntityid, aClientid) {\n        DemoApp.CircleEntity.superclass.constructor.call(this, anEntityid, aClientid);\n\n        this.setColor(\"FFFFFF\");\n        this.velocity = new RealtimeMultiplayerGame.model.Point(0, 0);\n        this.acceleration = new RealtimeMultiplayerGame.model.Point(0, 0);\n        return this;\n    };\n\n    DemoApp.CircleEntity.prototype = {\n        radius: Constants.ENTITY_DEFAULT_RADIUS,\n        velocity: RealtimeMultiplayerGame.model.Point.prototype.ZERO,\n        acceleration: RealtimeMultiplayerGame.model.Point.prototype.ZERO,\n        collisionCircle: null,\t\t\t\t\t\t\t\t\t\t// An instance of RealtimeMultiplayerGame.modules.circlecollision.PackedCircle\n        entityType: Constants.GENERIC_CIRCLE,\n\n        /**\n         * Update the entity's view - this is only called on the clientside\n         */\n        updateView: function () {\n            if (!this.view) return;\n            this.view.x = this.position.x - this.radius;\n            this.view.y = this.position.y - this.radius;\n\n            var diameter = this.lastReceivedEntityDescription.radius * 2;\n            this.view.setSize(diameter, diameter);\n            this.view.setFillStyle(\"#\" + this.lastReceivedEntityDescription.color);\n        },\n\n        /**\n         * Update position of this entity - this is only called on the serverside\n         * @param {Number} speedFactor    A number signifying how much faster or slower we are moving than the target framerate\n         * @param {Number} gameClock    Current game time in seconds (zero based)\n         * @param {Number} gameTick        Current game tick (incrimented each frame)\n         */\n        updatePosition: function (speedFactor, gameClock, gameTick) {\n\n            // Modify velocity using perlin noise\n            var theta = 0.008;\n\n            var noise = RealtimeMultiplayerGame.model.noise(nOffset + this.position.x * theta, nOffset + this.position.y * theta, gameTick * 0.003);\n            var angle = noise * 12;\n            var speed = 0.2;\n            this.acceleration.x += Math.cos(angle) * speed - 0.3;\n            this.acceleration.y -= Math.sin(angle) * speed;\n\n\n            this.velocity.translatePoint(this.acceleration);\n            this.velocity.limit(5);\n            this.velocity.multiply(0.9);\n            this.acceleration.set(0, 0);\n            this.collisionCircle.position.translatePoint(this.velocity);\n            this.position = this.collisionCircle.position.clone();\n        },\n\n        tempColor: function () {\n            var that = this;\n\n            clearTimeout(this.timeout);\n            this.color = \"FF0000\";\n            this.timeout = setTimeout(function () {\n                that.setColor(that.originalColor);\n            }, 50);\n        },\n\n        /**\n         * Deallocate memory\n         */\n        dealloc: function () {\n            this.collisionCircle.dealloc();\n            this.collisionCircle = null;\n            DemoApp.CircleEntity.superclass.dealloc.call(this);\n        },\n\n        constructEntityDescription: function () {\n            return DemoApp.CircleEntity.superclass.constructEntityDescription.call(this) + ',' + this.radius + ',' + this.color;\n        },\n\n        ///// ACCESSORS\n        /**\n         * Set the CollisionCircle for this game entity.\n         * @param aCollisionCircle\n         */\n        setCollisionCircle: function (aCollisionCircle) {\n            this.collisionCircle = aCollisionCircle;\n            this.collisionCircle.setDelegate(this);\n            this.collisionCircle.setPosition(this.position.clone());\n            this.collisionCircle.setRadius(this.radius);\n            this.collisionCircle.collisionMask = 1;\n            this.collisionCircle.collisionGroup = 1;\n        },\n        getCollisionCircle: function () {\n            return this.collisionCircle\n        },\n\n        /**\n         * Set the color of this entity, a property originalColor is also stored\n         * @param aColor\n         */\n        setColor: function (aColor) {\n            if (!this.originalColor) {\n                this.originalColor = aColor;\n            }\n\n            this.color = aColor;\n        },\n        getColor: function () {\n            return this.color\n        },\n        getOriginalColor: function () {\n            return this.originalColor\n        }\n    };\n\n    // extend RealtimeMultiplayerGame.model.GameEntity\n    RealtimeMultiplayerGame.extend(DemoApp.CircleEntity, RealtimeMultiplayerGame.model.GameEntity, null);\n})();\n\n\n// WEBPACK FOOTER //\n// ./js/DemoCircles/CircleEntity.js","var Constants = require('./DemoAppConstants');\n/**\n File:\n AbstractServerGame.js\n Created By:\n Mario Gonzalez\n Project:\n RealtimeMultiplayerNodeJS\n Abstract:\n This class is the base Game controller in RealtimeMultiplayerGame on the server side.\n It provides things such as dropping players, and contains a ServerNetChannel\n Basic Usage:\n [This class is not instantiated! - below is an example of using this class by extending it]\n\n (function(){\n\t\tMyGameClass = function() {\n\t\t\treturn this;\n \t\t}\n\n\t\tRealtimeMultiplayerGame.extend(MyGameClass, RealtimeMultiplayerGame.AbstractServerGame, null);\n\t};\n Version:\n 1.0\n */\nexport default class DemoView {\n    constructor() {\n        this.setupCAAT();\n        this.setupStats();\n        this.caatDirector = null;\t\t\t\t// CAAT Director instance\n        this.caatScene = null;\t\t\t\t// CAAT Scene instance\n        this.stats = null;\t\t\t\t// Stats.js instance\n    };\n\n\n    // Methods\n    setupCAAT() {\n        this.caatScene = new CAAT.Scene(); // Create a scene, all directors must have at least one scene - this is where all your stuff goes\n        this.caatScene.create();\t// Notice we call create when creating this, and ShapeActor below. Both are Actors\n        this.caatScene.setFillStyle('#000000');\n\n        this.caatDirector = new CAAT.Director().initialize(Constants.GAME_WIDTH, Constants.GAME_HEIGHT); // Create the director instance\n        this.caatDirector.addScene(this.caatScene); // Immediately add the scene once it's created\n\n        // Start the render loop, with at 60FPS\n//\t\t\tthis.caatDirector.loop(60);\n    }\n\n    /**\n     * Updates our current view, passing along the current actual time (via Date().getTime());\n     * @param {Number} gameClockReal The current actual time, according to the game\n     */\n    update(gameClockReal) {\n        var delta = gameClockReal - this.caatDirector.timeline;\n        this.caatDirector.render(delta);\n        this.caatDirector.timeline = gameClockReal;\n    }\n\n    /**\n     * Creates a Stats.js instance and adds it to the page\n     */\n    setupStats() {\n        var container = document.createElement('div');\n        this.stats = new Stats();\n        this.stats.domElement.style.position = 'absolute';\n        this.stats.domElement.style.top = '0px';\n        container.appendChild(this.stats.domElement);\n        document.body.appendChild(container);\n    }\n\n    addEntity(anEntityView) {\n        console.log(\"Adding Entity To CAAT\", anEntityView);\n        this.caatScene.addChild(anEntityView);\n    }\n\n    removeEntity(anEntityView) {\n        console.log(\"Removing Entity From CAAT\", anEntityView);\n        this.caatScene.removeChild(anEntityView);\n    }\n\n    /**\n     * Insert the CAATDirector canvas into an HTMLElement\n     * @param {String} id An HTMLElement id\n     */\n    insertIntoHTMLElementWithId(id) {\n        document.getElementById(id).appendChild(this.caatDirector.canvas);\n    }\n\n    // Memory\n    dealloc() {\n        this.director.destroy();\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./js/DemoCircles/DemoView.js"],"sourceRoot":""}