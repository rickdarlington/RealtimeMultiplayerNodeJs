{"version":3,"sources":["webpack:///webpack/bootstrap e9494717179c87f05685","webpack:///./js/DemoCircles/DemoAppConstants.js","webpack:///./js/main.js","webpack:///./js/DemoCircles/DemoClientGame.js","webpack:///./js/DemoCircles/CircleEntity.js","webpack:///./js/DemoCircles/DemoView.js","webpack:///./js/core/AbstractClientGame.js","webpack:///./js/core/AbstractGame.js","webpack:///./js/model/Point.js","webpack:///./js/model/GameEntity.js","webpack:///./js/model/ImprovedNoise.js"],"names":["module","exports","Constants","ENTITY_DEFAULT_RADIUS","GAME_WIDTH","GAME_HEIGHT","MAX_CIRCLES","GAME_DURATION","UNKNOWN","GENERIC_CIRCLE","PLAYER_ENTITY","ENTITY_TYPES","DemoClientGame","require","onDocumentReady","clientGame","window","addEventListener","CircleEntity","DemoView","AbstractClientGame","startGameClock","view","insertIntoHTMLElementWithId","stats","update","gameClockReal","entityDesc","diameter","radius","aCircleView","CAAT","ShapeActor","create","setSize","setFillStyle","Color","prototype","hsvToRgb","entityid","toHex","setLocation","x","y","newEntity","isOwnedByMe","clientid","netChannel","entityType","PlayerEntity","addTraitAndExecute","RealtimeMultiplayerGame","controller","traits","KeyboardInputTrait","clientCharacter","position","set","setView","fieldController","addEntity","entityDescAsArray","entityDescription","color","messageData","log","joinGame","getClientid","msg","console","GameEntity","Point","Noise","anEntityid","aClientid","nOffset","Math","random","setColor","velocity","acceleration","lastReceivedEntityDescription","speedFactor","gameClock","gameTick","theta","noise","angle","speed","cos","sin","translatePoint","limit","multiply","collisionCircle","clone","that","clearTimeout","timeout","setTimeout","originalColor","dealloc","call","aCollisionCircle","setDelegate","setPosition","setRadius","collisionMask","collisionGroup","aColor","setupCAAT","setupStats","caatDirector","caatScene","Scene","Director","initialize","addScene","delta","timeline","render","container","document","createElement","Stats","domElement","style","top","appendChild","body","anEntityView","addChild","removeChild","id","getElementById","canvas","director","destroy","AbstractGame","setupView","nickname","locateUpdateFailedCount","Error","ClientNetChannel","getEntities","forEach","key","entity","updateView","input","constructEntityDescription","addMessageToQueue","CMDS","PLAYER_UPDATE","renderAtTime","CLIENT_SETTING","INTERP","FAKE_LAG","tick","renderTime","cmdBuffer","getIncomingWorldUpdateBuffer","len","length","newPosition","model","newRotation","maxInterpolationDistance","maxInterpSQ","nextWED","previousWED","i","forceUpdate","currentWED","durationBetweenPoints","offsetTime","activeEntities","t","entityPositionPast","entityRotationPast","entityPositionFuture","entityRotationFuture","getEntityWithid","createEntityFromDesc","previousEntityDescription","objectForKey","rotation","getDistanceSquared","updateEntity","EXPIRED_ENTITY_CHECK_RATE","removeExpiredEntities","payload","aNickname","PLAYER_JOINED","animationLoop","isRunning","requestAnimationFrame","stopGameClock","setupNetChannel","setupCmdMap","Controller","FieldController","intervalGameTick","intervalFramerate","intervalTargetDelta","NaN","gameDuration","Number","MAX_VALUE","cmdMap","oldTime","Date","getTime","floor","setInterval","clearInterval","xpos","ypos","p","aPoint","factor","getLength","atan2","max","aLenthSquared","getLengthSquared","aLength","sqrt","lengthSquared","point","deltaX","deltaY","String","round","ZERO","wantsFullUpdate","returnString","aTrait","existingVersionOfTrait","getTraitWithName","displayName","canStack","removeTraitWithName","push","attach","wasAdded","addTrait","execute","aTraitName","removedTraits","splice","detach","removeAllTraits","aView","trait","ImprovedNoise","a","b","hash","z","h","u","v","n","floorX","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","fade","w","A","AA","AB","B","BA","BB","lerp","grad"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e9494717179c87f05685","/**\n File:\n DemoAppConstants.js\n Created By:\n Mario Gonzalez\n Project:\n RealtimeMultiplayerNodeJS - Demo\n Abstract:\n This class contains Constants used by the DemoApp in RealtimeMultiplayerGame\n Basic Usage:\n [This class is not instantiated! - below is an example of using this class by extending it]\n var clientDropWait = RealtimeMultiplayerGame.Constants.CL_DEFAULT_MAXRATE\n\n Version:\n 1.0\n */\n module.exports = function(){\n    class Constants {\n        \n    }\n    Constants.ENTITY_DEFAULT_RADIUS = 8;\n    Constants.GAME_WIDTH = 700;\n    Constants.GAME_HEIGHT = 450;\n    Constants.MAX_CIRCLES = 100;\n    Constants.GAME_DURATION = 1000 * 300;\n    Constants.UNKNOWN = 1 << 0;\n    Constants.GENERIC_CIRCLE = 1 << 1;\n    Constants.PLAYER_ENTITY = 1 << 2;\n    \n    Constants.ENTITY_TYPES = {\n        \n    }\n }\n\n\n// WEBPACK FOOTER //\n// ./js/DemoCircles/DemoAppConstants.js","var DemoClientGame = require('./DemoCircles/DemoClientGame');\n\n(function () {\n    var onDocumentReady = function () {\n        var clientGame = new DemoClientGame();\n    };\n\n    window.addEventListener('load', onDocumentReady, false);\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./js/main.js","var Constants = require('./DemoAppConstants');\nvar CircleEntity = require('./CircleEntity');\nvar DemoView = require('./DemoView');\nvar AbstractClientGame = require ('../core/AbstractClientGame');\n\n/**\n File:\n DemoServerGame\n Created By:\n Mario Gonzalez\n Project:\n DemoApp\n Abstract:\n This is a concrete server instance of our game\n Basic Usage:\n DemoServerGame = new DemoApp.DemoServerGame();\n DemoServerGame.start();\n DemoServerGame.explodeEveryone();\n Version:\n 1.0\n */\n\nexport default class DemoClientGame extends AbstractClientGame {\n\n    constructor() {\n        super();\n        this.startGameClock();\n        return this;\n    };\n\n\n    setupView() {\n        this.view = new DemoView();\n        this.view.insertIntoHTMLElementWithId(\"gamecontainer\");\n\n        super.setupView(this);\n    };\n\n    /**\n     * @inheritDoc\n     */\n    tick() {\n        super.tick();\n        this.view.stats.update();\n        this.view.update(this.gameClockReal);\n    };\n\n    /**\n     * @inheritDoc\n     */\n    createEntityFromDesc(entityDesc) {\n\n        var diameter = entityDesc.radius * 2;\n\n        // Create a view via CAAT\n        var aCircleView = new CAAT.ShapeActor();\n        aCircleView.create();\n        aCircleView.setSize(diameter, diameter);\n        aCircleView.setFillStyle(\"#\" + CAAT.Color.prototype.hsvToRgb((entityDesc.entityid * 15) % 360, 40, 99).toHex()); // Random color\n        aCircleView.setLocation(entityDesc.x, entityDesc.y); // Place in the center of the screen, use the director's width/height\n\n        var newEntity = null;\n\n        var isOwnedByMe = entityDesc.clientid == this.netChannel.clientid;\n        // If this is a player entity\n        if (entityDesc.entityType & Constants.ENTITY_TYPES.PLAYER_ENTITY) {\n            newEntity = new PlayerEntity(entityDesc.entityid, entityDesc.clientid);\n\n            // If it is a player entity and it's my player entity - attach a KeyboardInputTrait to it\n            if (isOwnedByMe) {\n                newEntity.addTraitAndExecute(new RealtimeMultiplayerGame.controller.traits.KeyboardInputTrait());\n                this.clientCharacter = newEntity;\n            }\n        } else {\n            newEntity = new CircleEntity(entityDesc.entityid, entityDesc.clientid);\n        }\n\n        newEntity.position.set(entityDesc.x, entityDesc.y);\n        newEntity.setView(aCircleView);\n\n        this.fieldController.addEntity(newEntity);\n    };\n\n    /**\n     * Called by the ClientNetChannel, it sends us an array containing tightly packed values and expects us to return a meaningful object\n     * It is left up to each game to implement this function because only the game knows what it needs to send.\n     * However the 4 example projects in RealtimeMultiplayerNodeJS offer should be used ans examples\n     *\n     * @param {Array} entityDescAsArray An array of tightly packed values\n     * @return {Object} An object which will be returned to you later on tied to a specific entity\n     */\n    parseEntityDescriptionArray(entityDescAsArray) {\n        var entityDescription = {};\n\n        // It is left upto each game to implement this function because only the game knows what it needs to send.\n        // However the 4 example projects in RealtimeMultiplayerNodeJS offer this an example\n        entityDescription.entityid = entityDescAsArray[0];\n        entityDescription.clientid = entityDescAsArray[1];\n        entityDescription.entityType = +entityDescAsArray[2];\n        entityDescription.x = +entityDescAsArray[3];\n        entityDescription.y = +entityDescAsArray[4];\n        entityDescription.radius = +entityDescAsArray[5];\n        entityDescription.color = entityDescAsArray[6];\n        return entityDescription;\n    };\n\n    /**\n     * @inheritDoc\n     */\n    netChannelDidConnect(messageData) {\n        super.netChannelDidConnect(messageData);\n        this.log(\"this: Joining Game\");\n        this.joinGame(\"Player\" + this.netChannel.getClientid()); // Automatically join the game with some name\n    };\n\n    /**\n     * @inheritDoc\n     */\n    netChannelDidDisconnect(messageData) {\n        super.netChannelDidDisconnect(messageData);\n        this.log(\"netChannelDidDisconnect\");\n    };\n\n    /**\n     * This function logs something to the right panel\n     * @param {Object} An object in the form of: { message: ['Client', 'domReady'] }\n     */\n    log(msg) {\n        console.log(\"DemoClientGame: \" + msg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./js/DemoCircles/DemoClientGame.js","var GameEntity = require('../model/GameEntity');\nvar Constants = require('./DemoAppConstants');\nvar Point = require('../model/Point');\nvar Noise = require('../model/ImprovedNoise');\n\n/**\n File:\n DemoApp.CircleEntity\n Created By:\n Mario Gonzalez\n Project:\n DemoApp\n Abstract:\n This is the base entity for the demo game\n Basic Usage:\n\n Version:\n 1.0\n */\nclass CircleEntity extends GameEntity {\n\n    constructor(anEntityid, aClientid) {\n        // radius: Constants.ENTITY_DEFAULT_RADIUS,\n        // velocity: RealtimeMultiplayerGame.model.Point.prototype.ZERO,\n        // acceleration: RealtimeMultiplayerGame.model.Point.prototype.ZERO,\n        // collisionCircle: null,\t\t\t\t\t\t\t\t\t\t// An instance of RealtimeMultiplayerGame.modules.circlecollision.PackedCircle\n        // entityType: Constants.GENERIC_CIRCLE,\n        super(anEntityid, aClientid);\n        this.nOffset = Math.random() * 2000;\n\n        this.setColor(\"FFFFFF\");\n        this.velocity = new Point(0, 0);\n        this.acceleration = new Point(0, 0);\n        return this;\n    }\n\n\n    /**\n     * Update the entity's view - this is only called on the clientside\n     */\n    updateView() {\n        if (!this.view) return;\n        this.view.x = this.position.x - this.radius;\n        this.view.y = this.position.y - this.radius;\n\n        var diameter = this.lastReceivedEntityDescription.radius * 2;\n        this.view.setSize(diameter, diameter);\n        this.view.setFillStyle(\"#\" + this.lastReceivedEntityDescription.color);\n    }\n\n    /**\n     * Update position of this entity - this is only called on the serverside\n     * @param {Number} speedFactor    A number signifying how much faster or slower we are moving than the target framerate\n     * @param {Number} gameClock    Current game time in seconds (zero based)\n     * @param {Number} gameTick        Current game tick (incrimented each frame)\n     */\n    updatePosition(speedFactor, gameClock, gameTick) {\n\n        // Modify velocity using perlin noise\n        var theta = 0.008;\n\n        var noise = new Noise(this.nOffset + this.position.x * theta, this.nOffset + this.position.y * theta, gameTick * 0.003);\n        var angle = noise * 12;\n        var speed = 0.2;\n        this.acceleration.x += Math.cos(angle) * speed - 0.3;\n        this.acceleration.y -= Math.sin(angle) * speed;\n\n\n        this.velocity.translatePoint(this.acceleration);\n        this.velocity.limit(5);\n        this.velocity.multiply(0.9);\n        this.acceleration.set(0, 0);\n        this.collisionCircle.position.translatePoint(this.velocity);\n        this.position = this.collisionCircle.position.clone();\n    }\n\n    tempColor() {\n        var that = this;\n\n        clearTimeout(this.timeout);\n        this.color = \"FF0000\";\n        this.timeout = setTimeout(function () {\n            that.setColor(that.originalColor);\n        }, 50);\n    }\n\n    /**\n     * Deallocate memory\n     */\n    dealloc() {\n        this.collisionCircle.dealloc();\n        this.collisionCircle = null;\n        //DemoApp.CircleEntity.superclass.dealloc.call(this);\n        super.dealloc();\n    }\n\n    constructEntityDescription() {\n        //return DemoApp.CircleEntity.superclass.constructEntityDescription.call(this) + ',' + this.radius + ',' + this.color;\n        super.constructEntityDescription.call(this.radius ,this.color);\n    }\n\n    ///// ACCESSORS\n    /**\n     * Set the CollisionCircle for this game entity.\n     * @param aCollisionCircle\n     */\n    setCollisionCircle(aCollisionCircle) {\n        this.collisionCircle = aCollisionCircle;\n        this.collisionCircle.setDelegate(this);\n        this.collisionCircle.setPosition(this.position.clone());\n        this.collisionCircle.setRadius(this.radius);\n        this.collisionCircle.collisionMask = 1;\n        this.collisionCircle.collisionGroup = 1;\n    }\n    getCollisionCircle() {\n        return this.collisionCircle\n    }\n\n    /**\n     * Set the color of this entity, a property originalColor is also stored\n     * @param aColor\n     */\n    setColor(aColor) {\n        if (!this.originalColor) {\n            this.originalColor = aColor;\n        }\n\n        this.color = aColor;\n    }\n    getColor() {\n        return this.color\n    }\n    getOriginalColor() {\n        return this.originalColor\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/DemoCircles/CircleEntity.js","var Constants = require('./DemoAppConstants');\n/**\n File:\n AbstractServerGame.js\n Created By:\n Mario Gonzalez\n Project:\n RealtimeMultiplayerNodeJS\n Abstract:\n This class is the base Game controller in RealtimeMultiplayerGame on the server side.\n It provides things such as dropping players, and contains a ServerNetChannel\n Basic Usage:\n [This class is not instantiated! - below is an example of using this class by extending it]\n\n (function(){\n\t\tMyGameClass = function() {\n\t\t\treturn this;\n \t\t}\n\n\t\tRealtimeMultiplayerGame.extend(MyGameClass, RealtimeMultiplayerGame.AbstractServerGame, null);\n\t};\n Version:\n 1.0\n */\nexport default class DemoView {\n    constructor() {\n        this.setupCAAT();\n        this.setupStats();\n        this.caatDirector = null;\t\t\t\t// CAAT Director instance\n        this.caatScene = null;\t\t\t\t// CAAT Scene instance\n        this.stats = null;\t\t\t\t// Stats.js instance\n    };\n\n\n    // Methods\n    setupCAAT() {\n        this.caatScene = new CAAT.Scene(); // Create a scene, all directors must have at least one scene - this is where all your stuff goes\n        this.caatScene.create();\t// Notice we call create when creating this, and ShapeActor below. Both are Actors\n        this.caatScene.setFillStyle('#000000');\n\n        this.caatDirector = new CAAT.Director().initialize(Constants.GAME_WIDTH, Constants.GAME_HEIGHT); // Create the director instance\n        this.caatDirector.addScene(this.caatScene); // Immediately add the scene once it's created\n\n        // Start the render loop, with at 60FPS\n//\t\t\tthis.caatDirector.loop(60);\n    }\n\n    /**\n     * Updates our current view, passing along the current actual time (via Date().getTime());\n     * @param {Number} gameClockReal The current actual time, according to the game\n     */\n    update(gameClockReal) {\n        var delta = gameClockReal - this.caatDirector.timeline;\n        this.caatDirector.render(delta);\n        this.caatDirector.timeline = gameClockReal;\n    }\n\n    /**\n     * Creates a Stats.js instance and adds it to the page\n     */\n    setupStats() {\n        var container = document.createElement('div');\n        this.stats = new Stats();\n        this.stats.domElement.style.position = 'absolute';\n        this.stats.domElement.style.top = '0px';\n        container.appendChild(this.stats.domElement);\n        document.body.appendChild(container);\n    }\n\n    addEntity(anEntityView) {\n        console.log(\"Adding Entity To CAAT\", anEntityView);\n        this.caatScene.addChild(anEntityView);\n    }\n\n    removeEntity(anEntityView) {\n        console.log(\"Removing Entity From CAAT\", anEntityView);\n        this.caatScene.removeChild(anEntityView);\n    }\n\n    /**\n     * Insert the CAATDirector canvas into an HTMLElement\n     * @param {String} id An HTMLElement id\n     */\n    insertIntoHTMLElementWithId(id) {\n        document.getElementById(id).appendChild(this.caatDirector.canvas);\n    }\n\n    // Memory\n    dealloc() {\n        this.director.destroy();\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./js/DemoCircles/DemoView.js","var AbstractGame = require('../core/AbstractGame');\n\n/**\n File:\n AbstractClientGame.js\n Created By:\n Mario Gonzalez\n Project:\n RealtimeMultiplayerNodeJS\n Abstract:\n This class is the client side base Game controller\n Basic Usage:\n [This class is not instantiated! - below is an example of using this class by extending it]\n\n (function(){\n\t\tMyGameClass = function() {\n\t\t\treturn this;\n \t\t}\n\n\t\tRealtimeMultiplayerGame.extend(MyGameClass, RealtimeMultiplayerGame.AbstractGame, null);\n\t};\n */\nexport default class AbstractClientGame extends AbstractGame {\n\n    constructor() {\n        super();\n        this.setupView();\n        this.view = null;\t\t\t\t\t\t\t// View\n        this.clientCharacter = null;\t\t\t\t// Reference to this users character\n        this.nickname = '';\t\t\t\t\t\t\t// User 'nickname'\n        this.locateUpdateFailedCount = 0;\n        return this;\n    };\n\n\n    // Methods\n    /**\n     * Setup the view\n     * RealtimeMultiplayerNodeJS is agnostic any rendering method\n     */\n    setupView() {\n        if (this.view === null) {  // If this is called, then user has not overwritten this function\n            throw new Error(\"RealtimeMultiplayerGame.AbstractClientGame.setupView - Override this method, then call MyClientGame.superclass.setupView()\");\n        }\n        this.fieldController.setView(this.view);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    setupNetChannel() {\n        super.setupNetChannel();\n        this.netChannel = new RealtimeMultiplayerGame.ClientNetChannel(this);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    setupCmdMap() {\n        super.setupCmdMap();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    tick() {\n        super.tick();\n\n        // Allow all entities to update their position\n        this.fieldController.getEntities().forEach(function (key, entity) {\n            entity.updateView();\n        }, this);\n\n        // Continuously queue information about our input - which will be sent to the server by netchannel\n        if (this.clientCharacter != null) {\n            var input = this.clientCharacter.constructEntityDescription();\n            this.netChannel.addMessageToQueue(false, RealtimeMultiplayerGame.Constants.CMDS.PLAYER_UPDATE, input);\n        }\n\n        // Draw the gameworld\n        this.renderAtTime(this.gameClock - RealtimeMultiplayerGame.Constants.CLIENT_SETTING.INTERP - RealtimeMultiplayerGame.Constants.CLIENT_SETTING.FAKE_LAG);\n        this.netChannel.tick();\n    }\n\n    /**\n     * Renders back in time between two previously received messages allowing for packet-loss, and a smooth simulation\n     * @param renderTime\n     */\n    renderAtTime(renderTime) {\n        var cmdBuffer = this.netChannel.getIncomingWorldUpdateBuffer(),\n            len = cmdBuffer.length;\n\n        // Need atleast 2 updates to render between\n        if (len < 2) return;\n        var newPosition = new RealtimeMultiplayerGame.model.Point(0, 0),\n            newRotation = 0.0;\n\n        // if the distance between prev and next is too great - don't interpolate\n        var maxInterpolationDistance = 150,\n            maxInterpSQ = maxInterpolationDistance * maxInterpolationDistance;\n\n        // Store the next world-entity-description before and after the desired render time\n        var nextWED = null,\n            previousWED = null;\n\n        // Loop through the points, until we find the first one that has a timeValue which is greater than our renderTime\n        // Knowing that then we know that the combined with the one before it - that passed our just check - we know we want to render ourselves somehwere between these two points\n        var i = 0;\n        var forceUpdate = false;\n        while (++i < len) {\n            var currentWED = cmdBuffer[i];\n\n            // We fall between this \"currentWorldEntityDescription\", and the last one we just checked\n            if (currentWED.gameClock >= renderTime) {\n                previousWED = cmdBuffer[i - 1];\n                nextWED = currentWED;\n                this.locateUpdateFailedCount = 0;\n                break;\n            }\n\n            // Have no found a matching update for a while - the client is way behind the server, set our time to the time of the last udpate we received\n//\t\t\t\tif(i === len -1) {\n//\t\t\t\t\tif(++this.locateUpdateFailedCount === RealtimeMultiplayerGame.Constants.CLIENT_SETTING.MAX_UPDATE_FAILURE_COUNT) {\n//\t\t\t\t\t\tthis.gameClock = currentWED.gameClock;\n//\t\t\t\t\t\tthis.gameTick = currentWED.gameTick;\n//\t\t\t\t\t\tpreviousWED = cmdBuffer[i-1];\n//\t\t\t\t\t\tnextWED = currentWED;\n//\t\t\t\t\t}\n//\t\t\t\t}\n        }\n\n        // Could not find two points to render between\n        if (nextWED == null || previousWED == null) {\n            console.log(\"GIVE UP\")\n            return false;\n        }\n\n        /**\n         * More info: http://www.learningiphone.com/2010/09/consicely-animate-an-object-along-a-path-sensitive-to-time/\n         * Find T in the time value between the points:\n         *\n         * durationBetweenPoints: Amount of time between the timestamp in both points\n         * offset: Figure out what our time would be if we pretended the previousBeforeTime.time was 0.00 by subtracting it from us\n         * t: Now that we have a zero based offsetTime, and a maximum time that is also zero based (durationBetweenPoints)\n         * we can easily figure out what offsetTime / duration.\n         *\n         * Example values: timeValue = 5.0f, nextPointTime = 10.0f, lastPointTime = 4.0f\n         * result:\n         * duration = 6.0f\n         * offsetTime = 1.0f\n         * t = 0.16\n         */\n        var durationBetweenPoints = (nextWED.gameClock - previousWED.gameClock);\n        var offsetTime = renderTime - previousWED.gameClock;\n        var activeEntities = {};\n\n        // T is where we fall between, as a function of these two points\n        var t = offsetTime / (nextWED.gameClock - previousWED.gameClock);\n        if (t > 1.0) t = 1.0;\n        else if (t < 0) t = 0.0;\n\n        // Note: We want to render at time \"B\", so grab the position at time \"A\" (previous), and time \"C\"(next)\n        var entityPositionPast = new RealtimeMultiplayerGame.model.Point(0, 0),\n            entityRotationPast = 0;\n\n        var entityPositionFuture = new RealtimeMultiplayerGame.model.Point(0, 0),\n            entityRotationFuture = 0;\n\n        // Update players\n        nextWED.forEach(function (key, entityDesc) {\n            // Catch garbage values\n            var entityid = entityDesc.entityid;\n            var entity = this.fieldController.getEntityWithid(entityid);\n\n            // We don't have this entity - create it!\n            if (!entity) {\n                this.createEntityFromDesc(entityDesc);\n            }\n            else {\n                // We already have this entity - update it\n                var previousEntityDescription = previousWED.objectForKey(entityid);\n\n                // Could not find info for this entity in previous description\n                // This can happen if this is this entities first frame in the game\n                if (!previousEntityDescription) return;\n\n                // Store past and future positions to compare\n                entityPositionPast.set(previousEntityDescription.x, previousEntityDescription.y);\n                entityRotationPast = previousEntityDescription.rotation;\n\n                entityPositionFuture.set(entityDesc.x, entityDesc.y);\n                entityRotationFuture = entityDesc.rotation;\n\n                // if the distance between prev and next is too great - don't interpolate\n                if (entityPositionPast.getDistanceSquared(entityPositionFuture) > maxInterpSQ) {\n                    t = 1;\n                }\n\n                // Interpolate the objects position by multiplying the Delta times T, and adding the previous position\n                newPosition.x = ( (entityPositionFuture.x - entityPositionPast.x) * t ) + entityPositionPast.x;\n                newPosition.y = ( (entityPositionFuture.y - entityPositionPast.y) * t ) + entityPositionPast.y;\n                newRotation = ( (entityRotationFuture - entityRotationPast) * t ) + entityRotationPast;\n            }\n\n            // Update the entity with the new information, and insert it into the activeEntities array\n            this.fieldController.updateEntity(entityid, newPosition, newRotation, entityDesc);\n            activeEntities[entityid] = true;\n\n        }, this);\n\n\n        // Destroy removed entities, every N frames\n        if (this.gameTick % RealtimeMultiplayerGame.Constants.CLIENT_SETTING.EXPIRED_ENTITY_CHECK_RATE === 0)\n            this.fieldController.removeExpiredEntities(activeEntities);\n    }\n\n\n    /**\n     * Create an enitity using the information provided\n     * @param {Object} entityDesc An object containing information such as 'entityid', 'clientid' and usually position information atleast\n     */\n    createEntityFromDesc(entityDesc) {\n        // OVERRIDE\n    }\n\n    /**\n     * Called by the ClientNetChannel, it sends us an array containing tightly packed values and expects us to return a meaningful object\n     * It is left up to each game to implement this function because only the game knows what it needs to send.\n     * However the 4 example projects in RealtimeMultiplayerNodeJS offer should be used ans examples\n     *\n     * @param {Array} entityDescAsArray An array of tightly packed values\n     * @return {Object} An object which will be returned to you later on tied to a specific entity\n     */\n//\t\tparseEntityDescriptionArray: function(entityDescAsArray)\n//\t\t{\n//\t\t\t// This is left in as an example, copy paste this into your AbstractClientGame subclass and modify from there\n//\t\t\tvar entityDescription = {};\n//\n//\t\t\t// It is left upto each game to implement this function because only the game knows what it needs to send.\n//\t\t\t// However the 4 example projects in RealtimeMultiplayerNodeJS offer this an example\n////\t\t\tentityDescription.entityid = +entityDescAsArray[0];\n////\t\t\tentityDescription.clientid = +entityDescAsArray[1];\n////\t\t\tentityDescription.entityType = +entityDescAsArray[2];\n////\t\t\tentityDescription.x = +entityDescAsArray[3];\n////\t\t\tentityDescription.y = +entityDescAsArray[4];\n////\t\t\tentityDescription.radius = +entityDescAsArray[5];\n////\t\t\tentityDescription.rotation = +entityDescAsArray[6];\n//\n//\t\t\treturn entityDescription;\n//\t\t},\n\n//////\tClientNetChannelDelegate\n    /**\n     * ClientNetChannel has connected via socket.io to server for first time\n     * Join the game\n     * @param messageData\n     */\n    netChannelDidConnect(messageData) {\n        // Sync time with server\n        this.gameClock = messageData.payload.gameClock;\n    }\n\n\n    /**\n     * Called when the user has entered a name, and wants to join the match\n     * @param aNickname\n     */\n    joinGame(aNickname) {\n        this.nickname = aNickname;\n        // Create a 'join' message and queue it in ClientNetChannel\n        this.netChannel.addMessageToQueue(true, RealtimeMultiplayerGame.Constants.CMDS.PLAYER_JOINED, {nickname: this.nickname});\n    }\n\n\n    /**\n     * Start/Restart the game tick\n     */\n    startGameClock() {\n        var that = this;\n        (function animationLoop() {\n            that.tick();\n\n            if (that.isRunning)\n                requestAnimationFrame(animationLoop);\n        })()\n    }\n\n    /**\n     * Called by NetChannel when it receives a command if it decides not to intercept it.\n     * (For example CMDS.FULL_UPDATE is always intercepted, so it never calls this function, but CMDS.SERVER_MATCH_START is not intercepted so this function triggered)\n     * @param messageData\n     */\n    netChannelDidReceiveMessage(messageData) {\n        // OVERRIDE\n    }\n\n    netChannelDidDisconnect() {\n        this.isRunning = false;\n        this.stopGameClock();\n    }\n\n\n    ///// Memory\n    dealloc() {\n        if (this.view) this.view.dealloc();\n        this.view = null;\n\n        super.dealloc();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./js/core/AbstractClientGame.js","/**\n File:\n AbstractGame.js\n Created By:\n Mario Gonzalez\n Project:\n RealtimeMultiplayerNodeJS\n Abstract:\n This class is the base Game controller in RealtimeMultiplayerGame it provides things such as, keeping track of the current game clock, starting and stopping the game clock\n Basic Usage:\n [This class is not instantiated! - below is an example of using this class by extending it]\n\n (function(){\n\t\tMyGameClass = function() {\n\t\t\treturn this;\n \t\t}\n\n\t\tRealtimeMultiplayerGame.extend(MyGameClass, RealtimeMultiplayerGame.AbstractGame, null);\n\t};\n */\n\nclass AbstractGame {\n\n    constructor() {\n        this.setupNetChannel();\n        this.setupCmdMap();\n        this.fieldController = new RealtimeMultiplayerGame.Controller.FieldController();\n\n        // Properties\n        this.gameClockReal = 0;\t\t\t\t\t\t\t\t\t\t\t// Actual time via \"new Date().getTime();\"\n        this.gameClock = 0;\t\t\t\t\t\t\t\t\t\t\t// Seconds since start\n        this.gameTick = 0;\t\t\t\t\t\t\t\t\t\t\t// Ticks since start\n        this.isRunning = true;\n        this.speedFactor = 1;\t\t\t\t\t\t\t\t\t\t\t// Used to create Framerate Independent Motion (FRIM) - 1.0 means running at exactly the correct speed, 0.5 means half-framerate. (otherwise faster machines which can update themselves more accurately will have an advantage)\n        this.intervalGameTick = null;\t\t\t\t\t\t\t\t\t\t\t// Setinterval for gametick\n        this.intervalFramerate = 60;\t\t\t\t\t\t\t\t\t\t\t// Try to call our tick function this often, intervalFramerate, is used to determin how often to call settimeout - we can set to lower numbers for slower computers\n        this.intervalTargetDelta = NaN;\t// this.targetDelta, milliseconds between frames. Normally it is 16ms or 60FPS. The framerate the game is designed against - used to create framerate independent motion\n        this.gameDuration = Number.MAX_VALUE;\t\t\t\t\t\t\t\t// Gameduration\n\n        this.netChannel = null;\t\t\t\t\t\t\t\t\t\t\t// ServerNetChannel / ClientNetChannel determined by subclass\n        this.fieldController = null;\t\t\t\t\t\t\t\t\t\t\t// FieldController\n        this.cmdMap = {};\n\n        return this;\n    };\n\n\n\n    /**\n     * Setup the ClientNetChannel or ServerNetChannel\n     */\n    setupNetChannel() {\n    }\n\n    /**\n     * setup the command mapping for the events recevied from netchannel\n     */\n    setupCmdMap() {\n        this.cmdMap = {};\n    }\n\n    // Methods\n    tick() {\n        // Store previous time and update current\n        var oldTime = this.gameClockReal;\n        this.gameClockReal = new Date().getTime();\n\n        // Our clock is zero based, so if for example it says 10,000 - that means the game started 10 seconds ago\n        var delta = this.gameClockReal - oldTime;\n        this.gameClock += delta;\n        this.gameTick++;\n\n        // Framerate Independent Motion -\n        // 1.0 means running at exactly the correct speed, 0.5 means half-framerate. (otherwise faster machines which can update themselves more accurately will have an advantage)\n        this.speedFactor = delta / ( this.intervalTargetDelta );\n        if (this.speedFactor <= 0) this.speedFactor = 1;\n\n        this.fieldController.tick(this.speedFactor, this.gameClockReal, this.gameTick);\n    }\n\n\n    /**\n     * Start/Restart the game tick\n     */\n    startGameClock() {\n        var that = this;\n        this.gameClockReal = new Date().getTime();\n        this.intervalTargetDelta = Math.floor(1000 / this.intervalFramerate);\n        this.intervalGameTick = setInterval(function () {\n            that.tick()\n        }, this.intervalTargetDelta);\n    }\n\n    /**\n     * Stop the game tick\n     */\n    stopGameClock() {\n        clearInterval(this.intervalGameTick);\n        clearTimeout(this.intervalGameTick);\n    }\n\n    setGameDuration() {\n    }\n\n    // Memory\n    dealloc() {\n        if (this.netChannel) this.netChannel.dealloc();\n        this.netChannel = null;\n\n        clearInterval(this.intervalGameTick);\n    }\n\n    log() {\n        // OVERRIDE or USE CONSOLE.LOG\n    }\n\n    ///// Accessors\n    getGameClock() {\n        return this.gameClock;\n    }\n\n    getGameTick() {\n        return this.gameTick;\n    }\n}\n\nmodule.exports = AbstractGame;\n\n\n// WEBPACK FOOTER //\n// ./js/core/AbstractGame.js","/**\n * @author  Hyperandroid  ||  http://hyperandroid.com/\n *\n * Hold a 2D point information.\n * Think about the possibility of turning CAAT.Point into {x:,y:}.\n *\n * (This is stolen from Hyperandroid's CAAT)\n **/\nclass Point {\n\n    /**\n     *\n     * A point defined by two coordinates.\n     *\n     * @param xpos {number}\n     * @param ypos {number}\n     *\n     * @constructor\n     */\n    constructor (xpos, ypos) {\n        this.x = xpos || 0;\n        this.y = ypos || 0;\n        return this;\n    }\n\n    set(x, y) {\n        this.x = x;\n        this.y = y;\n        return this;\n    }\n    /**\n     * Create a new RealtimeMultiplayerGame.model.Point equal to this one.\n     * @return {RealtimeMultiplayerGame.model.Point}\n     */\n    clone() {\n        var p = new RealtimeMultiplayerGame.model.Point();\n        p.set(this.x, this.y);\n        return p;\n    }\n    /**\n     * Translate this point to another position. The final point will be (point.x+x, point.y+y)\n     * @param x {number}\n     * @param y {number}\n     *\n     * @return this\n     */\n    translate(x, y) {\n        this.x += x;\n        this.y += y;\n\n        return this;\n    }\n    /**\n     * Translate this point to another point.\n     * @param aPoint {RealtimeMultiplayerGame.model.Point}\n     * @return this\n     */\n    translatePoint(aPoint) {\n        this.x += aPoint.x;\n        this.y += aPoint.y;\n        return this;\n    }\n    /**\n     * Substract a point from this one.\n     * @param aPoint {RealtimeMultiplayerGame.model.Point}\n     * @return this\n     */\n    subtract(aPoint) {\n        this.x -= aPoint.x;\n        this.y -= aPoint.y;\n        return this;\n    }\n\n    /**\n     * Substract a point from this one\n     * Returns a new point with the difference\n     * @param aPoint {RealtimeMultiplayerGame.model.Point}\n     * @return {RealtimeMultiplayerGame.model.Point}\n     */\n    subtractClone(aPoint) {\n        return new RealtimeMultiplayerGame.model.Point(this.x - aPoint.x, this.y - aPoint.y)\n    }\n\n    /**\n     * Multiply this point by a scalar.\n     * @param factor {number}\n     * @return this\n     */\n    multiply(factor) {\n        this.x *= factor;\n        this.y *= factor;\n        return this;\n    }\n    /**\n     * Rotate this point by an angle. The rotation is held by (0,0) coordinate as center.\n     * @param angle {number}\n     * @return this\n     */\n    rotate(angle) {\n        var x = this.x, y = this.y;\n        this.x = x * Math.cos(angle) - Math.sin(angle) * y;\n        this.y = x * Math.sin(angle) + Math.cos(angle) * y;\n        return this;\n    }\n    /**\n     *\n     * @param angle {number}\n     * @return this\n     */\n    setAngle(angle) {\n        var len = this.getLength();\n        this.x = Math.cos(angle) * len;\n        this.y = Math.sin(angle) * len;\n        return this;\n    }\n    /**\n     *\n     * @param length {number}\n     * @return this\n     */\n    setLength(length) {\n        var len = this.getLength();\n        if (len)this.multiply(length / len);\n        else this.x = this.y = length;\n        return this;\n    }\n    /**\n     * Normalize this point, that is, both set coordinates proportionally to values raning 0..1\n     * @return this\n     */\n    normalize() {\n        var len = this.getLength();\n        this.x /= len;\n        this.y /= len;\n        return this;\n    }\n    /**\n     * Return the angle from -Pi to Pi of this point.\n     * @return {number}\n     */\n    getAngle() {\n        return Math.atan2(this.y, this.x);\n    }\n    /**\n     * Set this point coordinates proportinally to a maximum value.\n     * @param max {number}\n     * @return this\n     */\n    limit(max) {\n        var aLenthSquared = this.getLengthSquared();\n        if (aLenthSquared + 0.01 > max * max) {\n            var aLength = Math.sqrt(aLenthSquared);\n            this.x = (this.x / aLength) * max;\n            this.y = (this.y / aLength) * max;\n        }\n        return this;\n    }\n    /**\n     * Get this point's lenght.\n     * @return {number}\n     */\n    getLength() {\n        var length = Math.sqrt(this.x * this.x + this.y * this.y);\n        if (length < 0.005 && length > -0.005) return 0.000001;\n        return length;\n\n    }\n    /**\n     * Get this point's squared length.\n     * @return {number}\n     */\n    getLengthSquared() {\n        var lengthSquared = this.x * this.x + this.y * this.y;\n        if (lengthSquared < 0.005 && lengthSquared > -0.005) return 0;\n        return lengthSquared;\n    }\n    /**\n     * Get the distance between two points.\n     * @param point {RealtimeMultiplayerGame.model.Point}\n     * @return {number}\n     */\n    getDistance(point) {\n        var deltaX = this.x - point.x;\n        var deltaY = this.y - point.y;\n        return Math.sqrt((deltaX * deltaX) + (deltaY * deltaY));\n    }\n    /**\n     * Get the squared distance between two points.\n     * @param point {RealtimeMultiplayerGame.model.Point}\n     * @return {number}\n     */\n    getDistanceSquared(point) {\n        var deltaX = this.x - point.x;\n        var deltaY = this.y - point.y;\n        return (deltaX * deltaX) + (deltaY * deltaY);\n    }\n    /**\n     * Get a string representation.\n     * @return {string}\n     */\n    toString() {\n        return \"(RealtimeMultiplayerGame.model.Point)\" +\n            \" x:'\" + String(Math.round(Math.floor(this.x * 10)) / 10) +\n            \" y:\" + String(Math.round(Math.floor(this.y * 10)) / 10);\n    }\n    \n    ZERO() {\n        return new Point(0,0);\n    }\n}\n\nmodule.exports = Point;\n\n\n// WEBPACK FOOTER //\n// ./js/model/Point.js","var Point = require('./Point');\n\n/**\n File:\n GameEntity.js\n Created By:\n Mario Gonzalez\n Project:\n RealtimeMultiplayerNodeJS\n Abstract:\n This class is the base GameEntity class in RealtimeMultiplayerGame, it contains a position rotation, health\n Basic Usage:\n\n var badGuy = new RealtimeMultiplayerGame.GameEntity();\n badGuy.position.x += 1;\n */\nclass GameEntity {\n\n    constructor(anEntityid, aClientid) {\n        this.clientid = -1;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Owner of this object\n        this.entityid = -1;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// UUID for this entity\n        this.entityType = -1;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// A special interger representing the entityType sent via along with other network info\n        this.position = new Point(0,0).ZERO;  \t\t// Current position of this entity\n        this.rotation = 0;\n        this.traits = null;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// An array of our traits; in reverse added order\n        this.view = null;\n        this.lastReceivedEntityDescription = null;\t\t\t\t\t\t\t\t\t// The last received entity description (set by renderAtTime)\n        \n        this.clientid = aClientid;\n        this.entityid = anEntityid;\n        this.traits = [];\n        this.position = new Point(0, 0);\n        return this;\n    };\n\n    /**\n     * Update the view's position\n     */\n    updateView() {\n        // OVERRIDE\n    }\n\n    /**\n     * Updates the position of this GameEntity based on it's movement properties (velocity, acceleration, damping)\n     * @param {Number} speedFactor    A number signifying how much faster or slower we are moving than the target framerate\n     * @param {Number} gameClock    Current game time in seconds (zero based)\n     * @param {Number} gameTick        Current game tick (incrimented each frame)\n     */\n    updatePosition(speedFactor, gameClock, gameTick) {\n        // OVERRIDE\n    }\n\n    /**\n     * Construct an entity description for this object, it is essentually a CSV so you have to know how to read it on the receiving end\n     * @param wantsFullUpdate    If true, certain things that are only sent when changed are always sent\n     */\n    constructEntityDescription(gameTick, wantsFullUpdate) {\n        // Note: \"~~\" is just a way to round the value without the Math.round function call\n        var returnString = this.entityid;\n        returnString += \",\" + this.clientid;\n        returnString += \",\" + this.entityType;\n        returnString += \",\" + ~~this.position.x;\n        returnString += \",\" + ~~this.position.y;\n\n        return returnString;\n    }\n\n    ////// TRAIT SUPPORT\n    /**\n     * Adds and attaches a trait (already created), to this entity.\n     * The trait is only attached if we do not already have one of the same type attached, or don't care (aTrait.canStack = true)\n     * @param {RealtimeMultiplayerGame.controller.traits.BaseTrait} aTrait A BaseTrait instance\n     * @return {Boolean} Whether the trait was added\n     */\n    addTrait(aTrait) {\n        // Check if we already have this trait, if we do - make sure the trait allows stacking\n        var existingVersionOfTrait = this.getTraitWithName(aTrait.displayName);\n        if (existingVersionOfTrait && !existingVersionOfTrait.canStack) {\n            return false;\n        }\n\n        // Remove existing version\n        if (existingVersionOfTrait) {\n            this.removeTraitWithName(aTrait.displayName);\n        }\n\n\n        this.traits.push(aTrait);\n        aTrait.attach(this);\n\n        return aTrait;\n    }\n\n    /**\n     * Calls addTrait and executes it immediately\n     * @param aTrait\n     */\n    addTraitAndExecute(aTrait) {\n        var wasAdded = this.addTrait(aTrait);\n        if (wasAdded) {\n            aTrait.execute();\n            return aTrait;\n        }\n\n        return null;\n    }\n\n    /**\n     * Removes a trait with a matching .displayName property\n     * @param aTraitName\n     */\n    removeTraitWithName(aTraitName) {\n        var len = this.traits.length;\n        var removedTraits = null;\n        for (var i = 0; i < len; ++i) {\n            if (this.traits[i].displayName === aTraitName) {\n                removedTraits = this.traits.splice(i, 1);\n                break;\n            }\n        }\n\n        // Detach removed traits\n        if (removedTraits) {\n            i = removedTraits.length;\n            while (i--) {\n                removedTraits[i].detach();\n            }\n        }\n    }\n\n    /**\n     * Removes all traits contained in this entity\n     */\n    removeAllTraits() {\n        var i = this.traits.length;\n        while (i--) {\n            this.traits[i].detach();\n        }\n\n        this.traits = [];\n    }\n\n    ///// MEMORY\n    dealloc() {\n        this.position = null;\n        this.removeAllTraits();\n        this.traits = null;\n    }\n\n    ////// ACCESSORS\n    setView(aView) {\n        this.view = aView;\n    }\n    getView() {\n        return this.view;\n    }\n    /**\n     * Returns a trait with a matching .displayName property\n     * @param aTraitName\n     */\n    getTraitWithName(aTraitName) {\n        var len = this.traits.length;\n        var trait = null;\n        for (var i = 0; i < len; ++i) {\n            if (this.traits[i].displayName === aTraitName) {\n                trait = this.traits[i];\n                break;\n            }\n        }\n        return trait;\n    }\n}\n\nmodule.exports = GameEntity;\n\n\n// WEBPACK FOOTER //\n// ./js/model/GameEntity.js","// http://mrl.nyu.edu/~perlin/noise/\nclass ImprovedNoise {\n    constructor() {\n        var p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10,\n            23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87,\n            174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211,\n            133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208,\n            89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5,\n            202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119,\n            248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232,\n            178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249,\n            14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205,\n            93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n    \n        for (var i = 0; i < 256; i++) {\n    \n            p[256 + i] = p[i];\n    \n        }\n    }\n\n    fade(t) {\n\n        return t * t * t * (t * (t * 6 - 15) + 10);\n\n    }\n\n    lerp(t, a, b) {\n\n        return a + t * (b - a);\n\n    }\n\n    grad(hash, x, y, z) {\n\n        var h = hash & 15;\n        var u = h < 8 ? x : y, v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n        return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\n\n    }\n}\n\nclass Noise extends ImprovedNoise {\n\n    constructor(x, y, z) {\n        super();\n        \n        var n = new ImprovedNoise();\n\n        var floorX = ~~x, floorY = ~~y, floorZ = ~~z;\n\n        var X = floorX & 255, Y = floorY & 255, Z = floorZ & 255;\n\n        x -= floorX;\n        y -= floorY;\n        z -= floorZ;\n\n        var xMinus1 = x - 1, yMinus1 = y - 1, zMinus1 = z - 1;\n\n        var u = n.fade(x), v = n.fade(y), w = n.fade(z);\n\n        var A = n.p[X] + Y, AA = n.p[A] + Z, AB = n.p[A + 1] + Z, B = n.p[X + 1] + Y, BA = n.p[B] + Z, BB = n.p[B + 1] + Z;\n\n        return n.lerp(w, n.lerp(v, n.lerp(u, n.grad(n.p[AA], x, y, z),\n            n.grad(n.p[BA], xMinus1, y, z)),\n            n.lerp(u, n.grad(n.p[AB], x, yMinus1, z),\n                n.grad(n.p[BB], xMinus1, yMinus1, z))),\n            n.lerp(v, n.lerp(u, n.grad(n.p[AA + 1], x, y, zMinus1),\n                n.grad(n.p[BA + 1], xMinus1, y, z - 1)),\n                n.lerp(u, n.grad(n.p[AB + 1], x, yMinus1, zMinus1),\n                    n.grad(n.p[BB + 1], xMinus1, yMinus1, zMinus1))));\n\n    }\n}\n\nmodule.exports = Noise;\n\n\n// WEBPACK FOOTER //\n// ./js/model/ImprovedNoise.js"],"sourceRoot":""}